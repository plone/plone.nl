name: testing.plone.nl Frontend CI/CD

on:
  workflow_dispatch:
  push:
    paths:
      - "frontend/**"

env:
  IMAGE_NAME_PREFIX: ghcr.io/plone/plone-nl
  IMAGE_NAME_SUFFIX: frontend
  DOMAIN: testing.plone.nl
  NAMESPACE: testing-plone-nl
jobs:

  meta:
    if: github.ref_type == 'branch'
    runs-on: ubuntu-latest
    outputs:
      VOLTO_VERSION: ${{ steps.vars.outputs.VOLTO_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Env Vars
        id: vars
        run: |
          echo "VOLTO_VERSION=$(cat frontend/version.txt)" >> $GITHUB_OUTPUT

  codeanalysis:
    if: github.ref_type == 'branch'
    runs-on: ubuntu-latest

    steps:
      - name: Main checkout
        uses: actions/checkout@v3

      - name: Linting
        run: |
          make install-frontend
          make lint-frontend

  unit:
    if: github.ref_type == 'branch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3

      - name: Test
        run: |
          make install-frontend
          make test-frontend-ci

  release:
    if: github.ref_type == 'branch'
    runs-on: ubuntu-latest
    needs: [meta, codeanalysis, unit]

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.IMAGE_NAME_PREFIX }}-${{ env.IMAGE_NAME_SUFFIX }}
          flavor: |
            latest=false
          tags: |
            type=ref,event=branch
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64
          context: frontend/
          file: frontend/dockerfiles/Dockerfile
          build-args: |
            VOLTO_VERSION=${{ needs.meta.outputs.VOLTO_VERSION }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: $${{ steps.meta.outputs.labels }}

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    concurrency: deploy_testing
    runs-on: ubuntu-latest
    needs:
      - release
      - meta
    environment:
      name: ${{ env.DOMMAIN }}
      url: https://${{ env.DOMMAIN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy to cluster
        uses: kitconcept/docker-stack-deploy@v1.2.0
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          remote_host: ${{ vars.DEPLOY_HOST }}
          remote_port: ${{ vars.DEPLOY_PORT }}
          remote_user: ${{ vars.DEPLOY_USER }}
          remote_private_key: ${{ secrets.DEPLOY_SSH }}
          stack_file: devops/stacks/${{ env.DOMMAIN }}.yml
          stack_name: ${{ env.NAMESPACE }}
          stack_param: ${{ github.ref_name }}
          env_file: ${{ secrets.ENV_FILE }}
          deploy_timeout: 480
